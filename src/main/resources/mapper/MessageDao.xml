<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuokuor.shiqu.dao.MessageDao">

    <resultMap type="com.kuokuor.shiqu.entity.Message" id="MessageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="fromId" column="from_id" jdbcType="INTEGER"/>
        <result property="toId" column="to_id" jdbcType="INTEGER"/>
        <result property="conversationId" column="conversation_id" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询私信列表[返回每个私信最新的一条消息]-->
    <select id="queryConversations" resultMap="MessageMap">
        select id,
               from_id,
               to_id,
               conversation_id,
               state,
               create_time,
               content
        from message
        where id in (
            select max(id)
            from message
            where state != 2
              and from_id != 0
              and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
    </select>

    <!--查询私信详情[返回私信的所有数据]-->
    <select id="queryLetters" resultMap="MessageMap">
        select id,
               from_id,
               to_id,
               conversation_id,
               state,
               create_time,
               content
        from message
        where state != 2
          and from_id != 0
          and conversation_id = #{conversationId}
        order by id desc
    </select>

    <!--查询未读私信数量[conversationId为null时查询未读私信总数]-->
    <select id="queryLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where state = 0
        and from_id != 0
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <!--新增消息[私信和系统通知都是消息]-->
    <insert id="insertMessage" keyProperty="id" useGeneratedKeys="true">
        insert into message(from_id, to_id, conversation_id, state, create_time, content)
        values (#{fromId}, #{toId}, #{conversationId}, #{state}, #{createTime}, #{content})
    </insert>

    <!--查询未读通知数-->
    <select id="queryNoticeUnreadCount" resultType="int">
        select count(id) from message
        where state = 0
        and from_id = 0
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <!--查询某一类型的通知详情-->
    <select id="queryNotices" resultMap="MessageMap">
        select id,
               from_id,
               to_id,
               conversation_id,
               state,
               create_time,
               content
        from message
        where state != 2
          and from_id = 0
          and to_id = #{userId}
          and conversation_id = #{topic}
        order by create_time desc
    </select>

    <!--修改状态-->
    <update id="updateState">
        update message
        set state=#{state}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>

